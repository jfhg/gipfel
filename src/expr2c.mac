printdecl(vars) := (
	sprint("double", first(vars)),
	for v in rest(vars) do sprint(",", v),
	sprint(";"))$

printdef(expr) := sprint(first(expr), "=", second(expr), ";")$

block2c(expr) := 
	if ?equal(op(expr), block) then (
		printdecl(first(expr)),
		for d in reverse(rest(reverse(rest(expr)))) do printdef(d),
		sprint("return", string(last(expr)), ";}", "
"))
	else
		sprint("return", string(expr), ";}", "
")$

expr2c(funcname, args, expr) := (
	sprint("double", funcname, "(", args, ") {"),
	block2c(subst(pow, "^", optimize(expr))))$
